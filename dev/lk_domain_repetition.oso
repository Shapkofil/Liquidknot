OpenShadingLanguage 1.00
# Compiled by oslc 1.10.10
# options: -o /tmp/tmp6huise9e.oso -I/home/shapkofil/.bfs/blender/latest/2.90/scripts/addons/cycles/shader
shader infinate
param	vector	ro	0 0 0		%read{9,32} %write{2147483647,-1}
param	vector	rd	0 0 0		%read{8,31} %write{2147483647,-1}
param	int	iter	256		%read{6,6} %write{2147483647,-1}
param	float	plank	0.00100000005		%read{21,169} %write{2147483647,-1}
param	float	max_distance	20		%read{28,28} %write{2147483647,-1}
oparam	color	FragColor	0 0 0		%read{2147483647,-1} %write{38,191}
oparam	float	Alpha	0		%read{2147483647,-1} %write{39,192}
oparam	float	Depth	0		%read{2147483647,-1} %write{27,27}
local	vector	___364_p1	%read{6,176} %write{6,176}
local	float	___364_d	%read{6,176} %write{6,176}
local	float	___365_e	%read{55,122} %write{54,54}
local	float	___366_res	%read{154,177} %write{151,176}
local	float	___367_t	%read{154,176} %write{153,176}
local	vector	___368_pos	%read{154,176} %write{154,176}
local	float	___368_h	%read{154,176} %write{154,176}
local	color	col	%read{188,191} %write{0,190}
local	float	alpha	%read{192,192} %write{1,189}
local	float	mat	%read{33,50} %write{2,2}
local	float	t	%read{6,31} %write{3,26}
local	int	___369_i	%read{6,26} %write{5,26}
local	vector	___370_pos	%read{6,26} %write{6,26}
local	float	___370_h	%read{6,26} %write{6,26}
local	color	___371_mate	%read{184,186} %write{30,52}
local	vector	___371_pos	%read{56,148} %write{32,32}
local	vector	___371_norm	%read{140,178} %write{137,137}
local	vector	___371_spot_dir	%read{140,176} %write{139,139}
local	float	___371_spot_diff	%read{184,184} %write{143,143}
local	float	___371_spot_sha	%read{185,185} %write{154,177}
local	float	___371_sky_diff	%read{186,186} %write{183,183}
const	vector	$const1	0 0 0		%read{0,0} %write{2147483647,-1}
const	int	$const2	0		%read{1,155} %write{2147483647,-1}
const	float	$const3	0		%read{2,183} %write{2147483647,-1}
temp	int	$tmp1	%read{6,26} %write{6,26}
temp	int	$tmp2	%read{4,26} %write{5,26}
temp	vector	$tmp3	%read{6,26} %write{6,26}
const	string	$const4	"map"		%read{10,158} %write{2147483647,-1}
temp	vector	$tmp4	%read{6,26} %write{6,26}
temp	vector	$tmp5	%read{6,26} %write{6,26}
const	float	$const6	2		%read{11,165} %write{2147483647,-1}
const	float	$const8	4		%read{13,173} %write{2147483647,-1}
const	string	$const9	"mod"		%read{12,160} %write{2147483647,-1}
temp	vector	$tmp6	%read{6,26} %write{6,26}
temp	vector	$tmp7	%read{6,26} %write{6,26}
temp	vector	$tmp8	%read{6,26} %write{6,26}
temp	float	$tmp9	%read{6,26} %write{6,26}
const	float	$const10	1		%read{19,182} %write{2147483647,-1}
temp	int	$tmp10	%read{6,26} %write{6,26}
const	int	$const11	1		%read{26,189} %write{2147483647,-1}
temp	int	$tmp11	%read{2147483647,-1} %write{6,26}
temp	int	$tmp12	%read{29,29} %write{28,28}
const	color	$const12	0.200000003 0.200000003 0.200000003		%read{30,30} %write{2147483647,-1}
temp	vector	$tmp13	%read{32,32} %write{31,31}
const	float	$const13	0.5		%read{33,33} %write{2147483647,-1}
temp	int	$tmp14	%read{34,34} %write{33,33}
const	color	$const14	0.0500000007 0.0500000007 0.0500000007		%read{35,35} %write{2147483647,-1}
const	float	$const15	1.5		%read{36,36} %write{2147483647,-1}
temp	int	$tmp15	%read{37,37} %write{36,36}
const	color	$const16	8 8 8		%read{38,38} %write{2147483647,-1}
const	float	$const17	2.5		%read{41,41} %write{2147483647,-1}
temp	int	$tmp16	%read{42,42} %write{41,41}
const	color	$const18	0.0399999991 0.0199999996 0.00499999989		%read{43,43} %write{2147483647,-1}
const	float	$const19	3.5		%read{44,44} %write{2147483647,-1}
temp	int	$tmp17	%read{45,45} %write{44,44}
const	color	$const20	0.00999999978 0.0399999991 0.0299999993		%read{46,46} %write{2147483647,-1}
const	float	$const21	4.5		%read{47,47} %write{2147483647,-1}
temp	int	$tmp18	%read{48,48} %write{47,47}
const	color	$const22	0.300000012 0.300000012 0.300000012		%read{49,49} %write{2147483647,-1}
const	float	$const23	5.5		%read{50,50} %write{2147483647,-1}
temp	int	$tmp19	%read{51,51} %write{50,50}
const	color	$const24	0.600000024 0.00999999978 0.00300000003		%read{52,52} %write{2147483647,-1}
const	string	$const25	"calcNormals"		%read{53,53} %write{2147483647,-1}
const	float	$const26	9.99999975e-05		%read{54,54} %write{2147483647,-1}
temp	vector	$tmp20	%read{137,137} %write{136,136}
temp	float	$tmp21	%read{81,81} %write{67,67}
temp	vector	$tmp22	%read{56,56} %write{55,55}
temp	vector	$tmp23	%read{58,58} %write{56,56}
temp	vector	$tmp24	%read{64,64} %write{63,63}
temp	vector	$tmp25	%read{60,63} %write{58,58}
temp	vector	$tmp26	%read{62,62} %write{61,61}
temp	vector	$tmp27	%read{61,61} %write{60,60}
temp	vector	$tmp28	%read{63,63} %write{62,62}
temp	float	$tmp29	%read{66,66} %write{65,65}
temp	float	$tmp30	%read{81,81} %write{80,80}
temp	vector	$tmp31	%read{69,69} %write{68,68}
temp	vector	$tmp32	%read{71,71} %write{69,69}
temp	vector	$tmp33	%read{77,77} %write{76,76}
temp	vector	$tmp34	%read{73,76} %write{71,71}
temp	vector	$tmp35	%read{75,75} %write{74,74}
temp	vector	$tmp36	%read{74,74} %write{73,73}
temp	vector	$tmp37	%read{76,76} %write{75,75}
temp	float	$tmp38	%read{79,79} %write{78,78}
temp	float	$tmp39	%read{136,136} %write{81,81}
temp	float	$tmp40	%read{108,108} %write{94,94}
temp	vector	$tmp41	%read{83,83} %write{82,82}
temp	vector	$tmp42	%read{85,85} %write{83,83}
temp	vector	$tmp43	%read{91,91} %write{90,90}
temp	vector	$tmp44	%read{87,90} %write{85,85}
temp	vector	$tmp45	%read{89,89} %write{88,88}
temp	vector	$tmp46	%read{88,88} %write{87,87}
temp	vector	$tmp47	%read{90,90} %write{89,89}
temp	float	$tmp48	%read{93,93} %write{92,92}
temp	float	$tmp49	%read{108,108} %write{107,107}
temp	vector	$tmp50	%read{96,96} %write{95,95}
temp	vector	$tmp51	%read{98,98} %write{96,96}
temp	vector	$tmp52	%read{104,104} %write{103,103}
temp	vector	$tmp53	%read{100,103} %write{98,98}
temp	vector	$tmp54	%read{102,102} %write{101,101}
temp	vector	$tmp55	%read{101,101} %write{100,100}
temp	vector	$tmp56	%read{103,103} %write{102,102}
temp	float	$tmp57	%read{106,106} %write{105,105}
temp	float	$tmp58	%read{136,136} %write{108,108}
temp	float	$tmp59	%read{135,135} %write{121,121}
temp	vector	$tmp60	%read{110,110} %write{109,109}
temp	vector	$tmp61	%read{112,112} %write{110,110}
temp	vector	$tmp62	%read{118,118} %write{117,117}
temp	vector	$tmp63	%read{114,117} %write{112,112}
temp	vector	$tmp64	%read{116,116} %write{115,115}
temp	vector	$tmp65	%read{115,115} %write{114,114}
temp	vector	$tmp66	%read{117,117} %write{116,116}
temp	float	$tmp67	%read{120,120} %write{119,119}
temp	float	$tmp68	%read{135,135} %write{134,134}
temp	vector	$tmp69	%read{123,123} %write{122,122}
temp	vector	$tmp70	%read{125,125} %write{123,123}
temp	vector	$tmp71	%read{131,131} %write{130,130}
temp	vector	$tmp72	%read{127,130} %write{125,125}
temp	vector	$tmp73	%read{129,129} %write{128,128}
temp	vector	$tmp74	%read{128,128} %write{127,127}
temp	vector	$tmp75	%read{130,130} %write{129,129}
temp	float	$tmp76	%read{133,133} %write{132,132}
temp	float	$tmp77	%read{136,136} %write{135,135}
const	vector	$const27	3 0 0		%read{138,138} %write{2147483647,-1}
temp	vector	$tmp79	%read{139,139} %write{138,138}
temp	float	$tmp80	%read{142,142} %write{140,140}
const	string	$const28	"clamp"		%read{141,181} %write{2147483647,-1}
temp	float	$tmp81	%read{143,143} %write{142,142}
temp	vector	$tmp82	%read{145,145} %write{144,144}
temp	vector	$tmp83	%read{154,176} %write{145,145}
temp	float	$tmp84	%read{154,176} %write{149,149}
temp	vector	$tmp85	%read{148,148} %write{147,147}
temp	float	$tmp86	%read{147,147} %write{146,146}
const	float	$const29	1.70000005		%read{147,147} %write{2147483647,-1}
temp	vector	$tmp87	%read{149,149} %write{148,148}
const	string	$const30	"castShadow"		%read{150,150} %write{2147483647,-1}
temp	int	$tmp88	%read{154,176} %write{154,176}
temp	int	$tmp89	%read{152,176} %write{153,176}
temp	vector	$tmp90	%read{154,176} %write{154,176}
temp	vector	$tmp91	%read{154,176} %write{154,176}
temp	vector	$tmp92	%read{154,176} %write{154,176}
temp	vector	$tmp93	%read{154,176} %write{154,176}
temp	vector	$tmp94	%read{154,176} %write{154,176}
temp	vector	$tmp95	%read{154,176} %write{154,176}
temp	float	$tmp96	%read{154,176} %write{154,176}
temp	int	$tmp97	%read{154,176} %write{154,176}
temp	float	$tmp98	%read{154,176} %write{154,176}
temp	float	$tmp99	%read{154,176} %write{154,176}
const	float	$const31	0.600000024		%read{180,180} %write{2147483647,-1}
const	float	$const32	0.400000006		%read{179,179} %write{2147483647,-1}
temp	float	$tmp100	%read{179,179} %write{178,178}
const	vector	$const33	0 0 1		%read{178,178} %write{2147483647,-1}
temp	float	$tmp102	%read{180,180} %write{179,179}
temp	float	$tmp103	%read{182,182} %write{180,180}
temp	float	$tmp104	%read{183,183} %write{182,182}
temp	color	$tmp105	%read{185,185} %write{184,184}
temp	color	$tmp106	%read{187,187} %write{186,186}
const	vector	$const34	0.050999999 0.050999999 0.050999999		%read{187,187} %write{2147483647,-1}
temp	color	$tmp108	%read{188,188} %write{187,187}
const	float	$const35	0.45449999		%read{190,190} %write{2147483647,-1}
code ___main___
# code/blender/liquidknot/dev/lk_domain_repetition.osl:63
#   float alpha = 0;
	assign		col $const1 	%filename{"code/blender/liquidknot/dev/lk_domain_repetition.osl"} %line{63} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:64
#   float mat = 0.0;
	assign		alpha $const2 	%line{64} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:65
# 
	assign		mat $const3 	%line{65} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:67
#   for ( int i=0; i<iter; i++){
	assign		t $const3 	%line{67} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:68
#     vector pos = ro + rd * t;
	for		$tmp2 6 8 25 27 	%line{68} %argrw{"r"}
	assign		___369_i $const2 	%argrw{"wr"}
	lt		$tmp1 ___369_i iter 	%argrw{"wrr"}
	neq		$tmp2 $tmp1 $const2 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:69
# 
	mul		$tmp3 rd t 	%line{69} %argrw{"wrr"}
	add		___370_pos ro $tmp3 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:72
# 
	functioncall	$const4 21 	%line{72} %argrw{"r"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:10
#   float d = length(p1) - 1.0;
	add		$tmp5 ___370_pos $const6 	%line{10} %argrw{"wrr"}
	functioncall	$const9 17 	%argrw{"r"}
# .bfs/blender/latest/2.90/scripts/addons/cycles/shader/stdosl.h:151
# vector mod (vector a, float  b) { return a - b*floor(a/b); }
	div		$tmp7 $tmp5 $const8 	%filename{".bfs/blender/latest/2.90/scripts/addons/cycles/shader/stdosl.h"} %line{151} %argrw{"wrr"}
	floor		$tmp6 $tmp7 	%argrw{"wr"}
	mul		$tmp8 $const8 $tmp6 	%argrw{"wrr"}
	sub		$tmp4 $tmp5 $tmp8 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:10
#   float d = length(p1) - 1.0;
	sub		___364_p1 $tmp4 $const6 	%filename{"code/blender/liquidknot/dev/lk_domain_repetition.osl"} %line{10} %argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:11
# 
	length		$tmp9 ___364_p1 	%line{11} %argrw{"wr"}
	sub		___364_d $tmp9 $const10 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:13
# }
	assign		___370_h ___364_d 	%line{13} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:74
#       break;
	lt		$tmp10 ___370_h plank 	%line{74} %argrw{"wrr"}
	if		$tmp10 24 24 	%argrw{"r"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:75
# 
	break	%line{75}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:77
#   }
	add		t t ___370_h 	%line{77} %argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:68
#     vector pos = ro + rd * t;
	assign		$tmp11 ___369_i 	%line{68} %argrw{"wr"}
	add		___369_i ___369_i $const11 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:79
# 
	assign		Depth t 	%line{79} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:81
#     color mate = color(.2);
	lt		$tmp12 t max_distance 	%line{81} %argrw{"wrr"}
	if		$tmp12 190 190 	%argrw{"r"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:82
#     vector pos = ro + rd * t;
	assign		___371_mate $const12 	%line{82} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:83
# 
	mul		$tmp13 rd t 	%line{83} %argrw{"wrr"}
	add		___371_pos ro $tmp13 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:85
#       mate = color(.05);
	lt		$tmp14 mat $const13 	%line{85} %argrw{"wrr"}
	if		$tmp14 36 53 	%argrw{"r"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:86
#     else if( mat < 1.5)
	assign		___371_mate $const14 	%line{86} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:87
#     {
	lt		$tmp15 mat $const15 	%line{87} %argrw{"wrr"}
	if		$tmp15 41 53 	%argrw{"r"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:89
#         Alpha = 1;
	assign		FragColor $const16 	%line{89} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:90
#         return;
	assign		Alpha $const11 	%line{90} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:91
#     }
	exit	%line{91}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:93
#       mate = color(.04, .02, .005);
	lt		$tmp16 mat $const17 	%line{93} %argrw{"wrr"}
	if		$tmp16 44 53 	%argrw{"r"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:94
#     else if( mat < 3.5)
	assign		___371_mate $const18 	%line{94} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:95
#       mate = color(.01, .04, .03);
	lt		$tmp17 mat $const19 	%line{95} %argrw{"wrr"}
	if		$tmp17 47 53 	%argrw{"r"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:96
#     else if( mat < 4.5)
	assign		___371_mate $const20 	%line{96} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:97
#       mate = color(.3);
	lt		$tmp18 mat $const21 	%line{97} %argrw{"wrr"}
	if		$tmp18 50 53 	%argrw{"r"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:98
#     else if( mat < 5.5)
	assign		___371_mate $const22 	%line{98} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:99
#       mate = color(.6,.01,.003);
	lt		$tmp19 mat $const23 	%line{99} %argrw{"wrr"}
	if		$tmp19 53 53 	%argrw{"r"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:100
# 
	assign		___371_mate $const24 	%line{100} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:102
#     vector spot_dir = normalize(vector(3, 0,0) - pos);
	functioncall	$const25 138 	%line{102} %argrw{"r"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:17
#   float _;
	assign		___365_e $const26 	%line{17} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:20
#                           map(pos + vector(0,e,0),_) - map(pos - vector(0,e,0),_),
	vector		$tmp22 ___365_e $const3 $const3 	%line{20} %argrw{"wrrr"}
	add		$tmp23 ___371_pos $tmp22 	%argrw{"wrr"}
	functioncall	$const4 68 	%argrw{"r"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:10
#   float d = length(p1) - 1.0;
	add		$tmp25 $tmp23 $const6 	%line{10} %argrw{"wrr"}
	functioncall	$const9 64 	%argrw{"r"}
# .bfs/blender/latest/2.90/scripts/addons/cycles/shader/stdosl.h:151
# vector mod (vector a, float  b) { return a - b*floor(a/b); }
	div		$tmp27 $tmp25 $const8 	%filename{".bfs/blender/latest/2.90/scripts/addons/cycles/shader/stdosl.h"} %line{151} %argrw{"wrr"}
	floor		$tmp26 $tmp27 	%argrw{"wr"}
	mul		$tmp28 $const8 $tmp26 	%argrw{"wrr"}
	sub		$tmp24 $tmp25 $tmp28 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:10
#   float d = length(p1) - 1.0;
	sub		___364_p1 $tmp24 $const6 	%filename{"code/blender/liquidknot/dev/lk_domain_repetition.osl"} %line{10} %argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:11
# 
	length		$tmp29 ___364_p1 	%line{11} %argrw{"wr"}
	sub		___364_d $tmp29 $const10 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:13
# }
	assign		$tmp21 ___364_d 	%line{13} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:20
#                           map(pos + vector(0,e,0),_) - map(pos - vector(0,e,0),_),
	vector		$tmp31 ___365_e $const3 $const3 	%line{20} %argrw{"wrrr"}
	sub		$tmp32 ___371_pos $tmp31 	%argrw{"wrr"}
	functioncall	$const4 81 	%argrw{"r"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:10
#   float d = length(p1) - 1.0;
	add		$tmp34 $tmp32 $const6 	%line{10} %argrw{"wrr"}
	functioncall	$const9 77 	%argrw{"r"}
# .bfs/blender/latest/2.90/scripts/addons/cycles/shader/stdosl.h:151
# vector mod (vector a, float  b) { return a - b*floor(a/b); }
	div		$tmp36 $tmp34 $const8 	%filename{".bfs/blender/latest/2.90/scripts/addons/cycles/shader/stdosl.h"} %line{151} %argrw{"wrr"}
	floor		$tmp35 $tmp36 	%argrw{"wr"}
	mul		$tmp37 $const8 $tmp35 	%argrw{"wrr"}
	sub		$tmp33 $tmp34 $tmp37 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:10
#   float d = length(p1) - 1.0;
	sub		___364_p1 $tmp33 $const6 	%filename{"code/blender/liquidknot/dev/lk_domain_repetition.osl"} %line{10} %argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:11
# 
	length		$tmp38 ___364_p1 	%line{11} %argrw{"wr"}
	sub		___364_d $tmp38 $const10 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:13
# }
	assign		$tmp30 ___364_d 	%line{13} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:20
#                           map(pos + vector(0,e,0),_) - map(pos - vector(0,e,0),_),
	sub		$tmp39 $tmp21 $tmp30 	%line{20} %argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:21
#                           map(pos + vector(0,0,e),_) - map(pos - vector(0,0,e),_)
	vector		$tmp41 $const3 ___365_e $const3 	%line{21} %argrw{"wrrr"}
	add		$tmp42 ___371_pos $tmp41 	%argrw{"wrr"}
	functioncall	$const4 95 	%argrw{"r"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:10
#   float d = length(p1) - 1.0;
	add		$tmp44 $tmp42 $const6 	%line{10} %argrw{"wrr"}
	functioncall	$const9 91 	%argrw{"r"}
# .bfs/blender/latest/2.90/scripts/addons/cycles/shader/stdosl.h:151
# vector mod (vector a, float  b) { return a - b*floor(a/b); }
	div		$tmp46 $tmp44 $const8 	%filename{".bfs/blender/latest/2.90/scripts/addons/cycles/shader/stdosl.h"} %line{151} %argrw{"wrr"}
	floor		$tmp45 $tmp46 	%argrw{"wr"}
	mul		$tmp47 $const8 $tmp45 	%argrw{"wrr"}
	sub		$tmp43 $tmp44 $tmp47 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:10
#   float d = length(p1) - 1.0;
	sub		___364_p1 $tmp43 $const6 	%filename{"code/blender/liquidknot/dev/lk_domain_repetition.osl"} %line{10} %argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:11
# 
	length		$tmp48 ___364_p1 	%line{11} %argrw{"wr"}
	sub		___364_d $tmp48 $const10 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:13
# }
	assign		$tmp40 ___364_d 	%line{13} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:21
#                           map(pos + vector(0,0,e),_) - map(pos - vector(0,0,e),_)
	vector		$tmp50 $const3 ___365_e $const3 	%line{21} %argrw{"wrrr"}
	sub		$tmp51 ___371_pos $tmp50 	%argrw{"wrr"}
	functioncall	$const4 108 	%argrw{"r"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:10
#   float d = length(p1) - 1.0;
	add		$tmp53 $tmp51 $const6 	%line{10} %argrw{"wrr"}
	functioncall	$const9 104 	%argrw{"r"}
# .bfs/blender/latest/2.90/scripts/addons/cycles/shader/stdosl.h:151
# vector mod (vector a, float  b) { return a - b*floor(a/b); }
	div		$tmp55 $tmp53 $const8 	%filename{".bfs/blender/latest/2.90/scripts/addons/cycles/shader/stdosl.h"} %line{151} %argrw{"wrr"}
	floor		$tmp54 $tmp55 	%argrw{"wr"}
	mul		$tmp56 $const8 $tmp54 	%argrw{"wrr"}
	sub		$tmp52 $tmp53 $tmp56 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:10
#   float d = length(p1) - 1.0;
	sub		___364_p1 $tmp52 $const6 	%filename{"code/blender/liquidknot/dev/lk_domain_repetition.osl"} %line{10} %argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:11
# 
	length		$tmp57 ___364_p1 	%line{11} %argrw{"wr"}
	sub		___364_d $tmp57 $const10 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:13
# }
	assign		$tmp49 ___364_d 	%line{13} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:21
#                           map(pos + vector(0,0,e),_) - map(pos - vector(0,0,e),_)
	sub		$tmp58 $tmp40 $tmp49 	%line{21} %argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:22
#                           ));
	vector		$tmp60 $const3 $const3 ___365_e 	%line{22} %argrw{"wrrr"}
	add		$tmp61 ___371_pos $tmp60 	%argrw{"wrr"}
	functioncall	$const4 122 	%argrw{"r"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:10
#   float d = length(p1) - 1.0;
	add		$tmp63 $tmp61 $const6 	%line{10} %argrw{"wrr"}
	functioncall	$const9 118 	%argrw{"r"}
# .bfs/blender/latest/2.90/scripts/addons/cycles/shader/stdosl.h:151
# vector mod (vector a, float  b) { return a - b*floor(a/b); }
	div		$tmp65 $tmp63 $const8 	%filename{".bfs/blender/latest/2.90/scripts/addons/cycles/shader/stdosl.h"} %line{151} %argrw{"wrr"}
	floor		$tmp64 $tmp65 	%argrw{"wr"}
	mul		$tmp66 $const8 $tmp64 	%argrw{"wrr"}
	sub		$tmp62 $tmp63 $tmp66 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:10
#   float d = length(p1) - 1.0;
	sub		___364_p1 $tmp62 $const6 	%filename{"code/blender/liquidknot/dev/lk_domain_repetition.osl"} %line{10} %argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:11
# 
	length		$tmp67 ___364_p1 	%line{11} %argrw{"wr"}
	sub		___364_d $tmp67 $const10 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:13
# }
	assign		$tmp59 ___364_d 	%line{13} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:22
#                           ));
	vector		$tmp69 $const3 $const3 ___365_e 	%line{22} %argrw{"wrrr"}
	sub		$tmp70 ___371_pos $tmp69 	%argrw{"wrr"}
	functioncall	$const4 135 	%argrw{"r"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:10
#   float d = length(p1) - 1.0;
	add		$tmp72 $tmp70 $const6 	%line{10} %argrw{"wrr"}
	functioncall	$const9 131 	%argrw{"r"}
# .bfs/blender/latest/2.90/scripts/addons/cycles/shader/stdosl.h:151
# vector mod (vector a, float  b) { return a - b*floor(a/b); }
	div		$tmp74 $tmp72 $const8 	%filename{".bfs/blender/latest/2.90/scripts/addons/cycles/shader/stdosl.h"} %line{151} %argrw{"wrr"}
	floor		$tmp73 $tmp74 	%argrw{"wr"}
	mul		$tmp75 $const8 $tmp73 	%argrw{"wrr"}
	sub		$tmp71 $tmp72 $tmp75 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:10
#   float d = length(p1) - 1.0;
	sub		___364_p1 $tmp71 $const6 	%filename{"code/blender/liquidknot/dev/lk_domain_repetition.osl"} %line{10} %argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:11
# 
	length		$tmp76 ___364_p1 	%line{11} %argrw{"wr"}
	sub		___364_d $tmp76 $const10 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:13
# }
	assign		$tmp68 ___364_d 	%line{13} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:22
#                           ));
	sub		$tmp77 $tmp59 $tmp68 	%line{22} %argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:19
#                           map(pos + vector(e,0,0),_) - map(pos - vector(e,0,0),_),
	vector		$tmp20 $tmp39 $tmp58 $tmp77 	%line{19} %argrw{"wrrr"}
	normalize	___371_norm $tmp20 	%argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:103
#     float spot_diff = clamp(dot(norm, spot_dir), 0.0, 1.0);
	sub		$tmp79 $const27 ___371_pos 	%line{103} %argrw{"wrr"}
	normalize	___371_spot_dir $tmp79 	%argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:104
#     float spot_sha = castShadow(pos + plank*norm, spot_dir, plank,
	dot		$tmp80 ___371_norm ___371_spot_dir 	%line{104} %argrw{"wrr"}
	functioncall	$const28 144 	%argrw{"r"}
# .bfs/blender/latest/2.90/scripts/addons/cycles/shader/stdosl.h:163
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp81 $tmp80 $const10 	%filename{".bfs/blender/latest/2.90/scripts/addons/cycles/shader/stdosl.h"} %line{163} %argrw{"wrr"}
	max		___371_spot_diff $tmp81 $const3 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:105
#                                  length(vector(pos[0],0,1.7) - pos), 4);
	mul		$tmp82 plank ___371_norm 	%filename{"code/blender/liquidknot/dev/lk_domain_repetition.osl"} %line{105} %argrw{"wrr"}
	add		$tmp83 ___371_pos $tmp82 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:106
#     float sky_diff = clamp(.6 + .4*dot(norm, vector(0,0,1)), 0.0, 1.0);
	compref		$tmp86 ___371_pos $const2 	%line{106} %argrw{"wrr"}
	vector		$tmp85 $tmp86 $const3 $const29 	%argrw{"wrrr"}
	sub		$tmp87 $tmp85 ___371_pos 	%argrw{"wrr"}
	length		$tmp84 $tmp87 	%argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:105
#                                  length(vector(pos[0],0,1.7) - pos), 4);
	functioncall	$const30 178 	%line{105} %argrw{"r"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:35
#   for ( float t=plank; t<tmax; ){
	assign		___366_res $const10 	%line{35} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:36
#     vector pos = ro + rd * t;
	for		$tmp89 154 156 177 177 	%line{36} %argrw{"r"}
	assign		___367_t plank 	%argrw{"wr"}
	lt		$tmp88 ___367_t $tmp84 	%argrw{"wrr"}
	neq		$tmp89 $tmp88 $const2 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:37
# 
	mul		$tmp90 ___371_spot_dir ___367_t 	%line{37} %argrw{"wrr"}
	add		___368_pos $tmp83 $tmp90 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:40
# 
	functioncall	$const4 169 	%line{40} %argrw{"r"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:10
#   float d = length(p1) - 1.0;
	add		$tmp92 ___368_pos $const6 	%line{10} %argrw{"wrr"}
	functioncall	$const9 165 	%argrw{"r"}
# .bfs/blender/latest/2.90/scripts/addons/cycles/shader/stdosl.h:151
# vector mod (vector a, float  b) { return a - b*floor(a/b); }
	div		$tmp94 $tmp92 $const8 	%filename{".bfs/blender/latest/2.90/scripts/addons/cycles/shader/stdosl.h"} %line{151} %argrw{"wrr"}
	floor		$tmp93 $tmp94 	%argrw{"wr"}
	mul		$tmp95 $const8 $tmp93 	%argrw{"wrr"}
	sub		$tmp91 $tmp92 $tmp95 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:10
#   float d = length(p1) - 1.0;
	sub		___364_p1 $tmp91 $const6 	%filename{"code/blender/liquidknot/dev/lk_domain_repetition.osl"} %line{10} %argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:11
# 
	length		$tmp96 ___364_p1 	%line{11} %argrw{"wr"}
	sub		___364_d $tmp96 $const10 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:13
# }
	assign		___368_h ___364_d 	%line{13} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:42
#       return 0.0;
	lt		$tmp97 ___368_h plank 	%line{42} %argrw{"wrr"}
	if		$tmp97 173 173 	%argrw{"r"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:43
# 
	assign		___371_spot_sha $const3 	%line{43} %argrw{"wr"}
	return
# code/blender/liquidknot/dev/lk_domain_repetition.osl:45
# 
	mul		$tmp98 $const8 ___368_h 	%line{45} %argrw{"wrr"}
	div		$tmp99 $tmp98 ___367_t 	%argrw{"wrr"}
	min		___366_res ___366_res $tmp99 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:47
#   }
	add		___367_t ___367_t ___368_h 	%line{47} %argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:49
# }
	assign		___371_spot_sha ___366_res 	%line{49} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:107
# 
	dot		$tmp100 ___371_norm $const33 	%line{107} %argrw{"wrr"}
	mul		$tmp102 $const32 $tmp100 	%argrw{"wrr"}
	add		$tmp103 $const31 $tmp102 	%argrw{"wrr"}
	functioncall	$const28 184 	%argrw{"r"}
# .bfs/blender/latest/2.90/scripts/addons/cycles/shader/stdosl.h:163
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp104 $tmp103 $const10 	%filename{".bfs/blender/latest/2.90/scripts/addons/cycles/shader/stdosl.h"} %line{163} %argrw{"wrr"}
	max		___371_sky_diff $tmp104 $const3 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:109
#     col += mate * sky_diff * vector(0.051);
	mul		$tmp105 ___371_mate ___371_spot_diff 	%filename{"code/blender/liquidknot/dev/lk_domain_repetition.osl"} %line{109} %argrw{"wrr"}
	mul		col $tmp105 ___371_spot_sha 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:110
# 
	mul		$tmp106 ___371_mate ___371_sky_diff 	%line{110} %argrw{"wrr"}
	mul		$tmp108 $tmp106 $const34 	%argrw{"wrr"}
	add		col col $tmp108 	%argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:112
#   }
	assign		alpha $const11 	%line{112} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:115
# 
	pow		col col $const35 	%line{115} %argrw{"wrr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:117
#   Alpha = alpha;
	assign		FragColor col 	%line{117} %argrw{"wr"}
# code/blender/liquidknot/dev/lk_domain_repetition.osl:118
# }
	assign		Alpha alpha 	%line{118} %argrw{"wr"}
	end
